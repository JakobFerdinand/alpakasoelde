---
import DashboardLayout from '../../../layouts/DashboardLayout.astro';
const { id } = Astro.params; 
// This 'id' is used by Astro to interpolate into the client script below.

export async function getStaticPaths() {
  // Return an empty array because the alpaka IDs are not known at build time.
  // The page will be rendered on the client side using the ID from the URL.
  return [];
}
---

<DashboardLayout title="Alpaka Details">
  <section class="alpaka-detail-page section">
    <div class="container">
      <div id="alpaka-detail" class="alpaka-detail loading">Lade Daten...</div>
    </div>
  </section>
</DashboardLayout>

<script>
  import { calculateAge } from '../../../utils/dateUtils';
  const id = "${id}";
  async function loadAlpaka() {
    try {
      const res = await fetch(`/api/dashboard/alpakas/${id}`);
      if (!res.ok) {
        const detail = document.getElementById('alpaka-detail');
        if (detail) {
          detail.textContent = 'Fehler beim Laden';
        }
        return;
      }
      const alpaka = await res.json();
      const detail = document.getElementById('alpaka-detail');
      if (detail) {
        const age = calculateAge(alpaka.Geburtsdatum);
        detail.classList.remove('loading');
        detail.innerHTML = `
          ${alpaka.ImageUrl ? `<img class="alpaka-photo" src="${alpaka.ImageUrl}" alt="${alpaka.Name}" />` : ''}
          <h2>${alpaka.Name}</h2>
          <p>Geburtsdatum: ${new Date(alpaka.Geburtsdatum).toLocaleDateString('de-AT')}</p>
          <p>Alter: ${age}</p>
        `;
      }
    } catch (e) {
      console.error(e);
    }
  }

  loadAlpaka();
</script>

<style>
  .alpaka-detail {
    background-color: var(--schurwolle);
    color: var(--taubenblau);
    padding: 2rem;
    border-radius: 0.5rem;
    text-align: center;
  }
  .alpaka-photo {
    max-width: 20rem;
    width: 100%;
    border-radius: 0.5rem;
    margin-bottom: 1rem;
  }
  .loading {
    font-weight: 600;
  }
  .loading::after {
    content: '';
    display: inline-block;
    width: 1em;
    height: 1em;
    margin-left: 0.5rem;
    border-radius: 50%;
    border: 2px solid currentColor;
    border-right-color: transparent;
    animation: spin 0.75s linear infinite;
  }
  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }
</style>
