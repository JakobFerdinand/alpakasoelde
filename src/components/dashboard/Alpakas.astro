<section class="dashboard-alpaka section">
  <div class="container">
    <div class="alpaka-header">
      <h2>Alpakas</h2>
      <button id="add-alpaka-toggle" class="add-btn" aria-label="Neues Alpaka hinzufÃ¼gen">+</button>
    </div>
    <table id="alpaka-table" class="alpaka-table">
      <thead>
        <tr>
          <th></th>
          <th>Name</th>
          <th>Alter</th>
        </tr>
      </thead>
      <tbody id="alpaka-list"></tbody>
    </table>
    <form id="add-alpaka-form" class="alpaka-form" method="post" action="/api/alpakas" hidden>
      <div class="form-field">
        <label for="alpaka-name">Name*</label>
        <input id="alpaka-name" name="name" type="text" required />
      </div>
      <div class="form-field">
        <label for="alpaka-geburtsdatum">Geburtsdatum*</label>
        <input id="alpaka-geburtsdatum" name="geburtsdatum" type="date" required />
      </div>
      <button type="submit" class="btn">Neues Alpaka anlegen</button>
    </form>
  </div>
</section>

<script>
  const toggle = document.getElementById('add-alpaka-toggle');
  const form = document.getElementById('add-alpaka-form');
  toggle.addEventListener('click', () => {
    form.hidden = !form.hidden;
  });

  async function loadAlpakas() {
    try {
      const res = await fetch('/dummy-alpakas.json');
      if (!res.ok) return;
      const alpacas = await res.json();
      const list = document.getElementById('alpaka-list');
      alpacas.forEach((alpaca) => {
        const row = document.createElement('tr');
        row.className = 'alpaka-item';
        const age = calculateAge(alpaca.geburtsdatum);
        row.innerHTML = `\n          <td><img class="profile-photo" src="${alpaca.image}" alt="${alpaca.name}" /></td>\n          <td class="alpaka-name">${alpaca.name}</td>\n          <td class="alpaka-age">${age}</td>`;
        list.appendChild(row);
      });
    } catch {
      /* ignore */
    }
  }

  function calculateAge(dateStr) {
    const birth = new Date(dateStr);
    const now = new Date();
    let years = now.getFullYear() - birth.getFullYear();
    let months = now.getMonth() - birth.getMonth();
    if (months < 0) {
      years--;
      months += 12;
    }
    return `${years} J ${months} M`;
  }

  loadAlpakas();
</script>

<style>
  .dashboard-alpaka {
    background-color: var(--himmelblau);
    color: var(--schurwolle);
    text-align: center;
  }
  .alpaka-header {
    display: flex;
    align-items: center;
    gap: 1rem;
  }
  .add-btn {
    margin-top: 0.5rem;
    background-color: var(--bluetenhonig);
    color: var(--schurwolle);
    border: none;
    border-radius: 0.375rem;
    width: 2rem;
    height: 2rem;
    font-size: 1.5rem;
    cursor: pointer;
  }
  .alpaka-table {
    width: 100%;
    border-collapse: collapse;
    margin: 1rem 0;
    background-color: var(--schurwolle);
    color: var(--taubenblau);
    border-radius: 0.5rem;
    overflow: hidden;
    text-align: left;
  }
  .alpaka-table th {
    background-color: var(--weidegruen);
    color: var(--schurwolle);
  }
  .alpaka-table th,
  .alpaka-table td {
    padding: 0.75rem 0.5rem;
    text-align: left;
  }
  .alpaka-table th:first-child,
  .alpaka-table td:first-child {
    text-align: center;
    width: 3.5rem;
  }
  .alpaka-item:hover > td {
    background-color: var(--auwasser);
  }
  .alpaka-item:not(:last-child) td {
    border-bottom: 1px solid var(--taubenblau);
  }
  .profile-photo {
    width: 2.5rem;
    height: 2.5rem;
    border-radius: 50%;
    object-fit: cover;
  }
  .alpaka-form {
    margin-top: 1rem;
    flex-direction: column;
    gap: 1rem;
  }
  .alpaka-form:not([hidden]) {
    display: flex;
  }
  .alpaka-form .form-field {
    display: flex;
    flex-direction: column;
    align-items: flex-start;
    gap: 0.25rem;
  }
  .alpaka-form input {
    padding: 0.5rem;
    border: 1px solid var(--taubenblau);
    border-radius: 0.25rem;
  }
  .alpaka-form input:focus {
    outline: none;
    box-shadow: 0 0 0 2px var(--bluetenhonig);
  }
</style>
