<section class="dashboard-alpaka section">
  <div class="container">
    <div class="alpaka-header">
      <h2>Alpakas</h2>
      <button id="add-alpaka-toggle" class="add-btn" aria-label="Neues Alpaka hinzufügen">+</button>
    </div>
    <table id="alpaka-table" class="alpaka-table">
      <thead>
        <tr>
          <th></th>
          <th>Name</th>
          <th>Alter</th>
        </tr>
      </thead>
      <tbody id="alpaka-list">
        <tr>
          <td colspan="3" class="alpaka-loading loading">Lade Daten...</td>
        </tr>
      </tbody>
    </table>
  </div>

  <div id="alpaka-lightbox" class="lightbox" hidden>
    <div class="lightbox-content">
      <button type="button" id="close-alpaka-form" class="close-btn" aria-label="Schließen">×</button>
      <form id="add-alpaka-form" class="alpaka-form" method="post" action="/api/dashboard/alpakas" enctype="multipart/form-data">
        <div class="form-field">
          <label for="alpaka-name">Name*</label>
          <input id="alpaka-name" name="name" type="text" maxlength="100" required />
        </div>
        <div class="form-field">
          <label for="alpaka-geburtsdatum">Geburtsdatum*</label>
          <input id="alpaka-geburtsdatum" name="geburtsdatum" type="date" required />
        </div>
        <div class="form-field">
          <label for="alpaka-photo">Foto</label>
          <input id="alpaka-photo" name="photo" type="file" accept=".png,.jpg,.jpeg" />
        </div>
        <button type="submit" class="btn">Neues Alpaka anlegen</button>
      </form>
    </div>
  </div>
</section>

<script>
  const toggle = document.getElementById('add-alpaka-toggle');
  const lightbox = document.getElementById('alpaka-lightbox');
  const closeBtn = document.getElementById('close-alpaka-form');
  const form = document.getElementById('add-alpaka-form') as HTMLFormElement | null;
  const imageUploadInput = document.getElementById('alpaka-photo') as HTMLInputElement | null;

  const setLightboxVisibility = (visible) => {
    if (!lightbox) return;
    lightbox.hidden = !visible;
    lightbox.classList.toggle('is-visible', visible);
    lightbox.setAttribute('aria-hidden', visible ? 'false' : 'true');
    if (document.body) {
      document.body.style.overflow = visible ? 'hidden' : '';
    }
  };

  if (lightbox) {
    lightbox.setAttribute('aria-hidden', 'true');
  }

  toggle?.addEventListener('click', () => {
    setLightboxVisibility(true);
  });

  closeBtn?.addEventListener('click', () => {
    setLightboxVisibility(false);
  });

  lightbox?.addEventListener('click', (e) => {
    if (e.target === lightbox) {
      setLightboxVisibility(false);
    }
  });

  const limits: { [key: string]: number } = { 'alpaka-name': 100 };

  Object.entries(limits).forEach(([id, max]) => {
    const el = document.getElementById(id) as HTMLInputElement | null;
    el?.addEventListener('input', () => {
      if (el.value.length > max) {
        el.setCustomValidity(`Maximal ${max} Zeichen erlaubt`);
      } else {
        el.setCustomValidity('');
      }
    });
  });

  const submitButton = form?.querySelector('button[type="submit"]') as HTMLButtonElement | null;

  form?.addEventListener('submit', (e) => {
    for (const [id, max] of Object.entries(limits)) {
      const el = document.getElementById(id) as HTMLInputElement | null;
      if (el && el.value.trim().length > max) {
        el.setCustomValidity(`Maximal ${max} Zeichen erlaubt`);
        el.reportValidity();
        e.preventDefault();
        return;
      }
    }

    // Client-side file size check
    if (imageUploadInput && imageUploadInput.files && imageUploadInput.files.length > 0) {
      const file = imageUploadInput.files[0];
      const maxFileSize = 15 * 1024 * 1024; // 15 MB (must match backend)
      if (file.size > maxFileSize) {
        alert(`File is too large. Maximum size is ${maxFileSize / (1024 * 1024)}MB.`);
        e.preventDefault(); // Prevent form submission
        if (submitButton) {
            submitButton.disabled = false; // Re-enable button
            submitButton.classList.remove('loading');
        }
        return;
      }
    }

    if (submitButton) {
        submitButton.disabled = true;
        submitButton.classList.add('loading');
    }
  });

  const navigateToAlpaka = (id: string) => {
    window.location.href = `/alpakas?id=${encodeURIComponent(id)}`;
  };

  async function loadAlpakas() {
    const list = document.getElementById('alpaka-list');
    if (!list) return;
    list.innerHTML =
      '<tr><td colspan="3" class="alpaka-loading loading">Lade Daten...</td></tr>';
    try {
      const res = await fetch('/api/dashboard/alpakas');
      if (!res.ok) return;
      const alpacas = await res.json();
      list.innerHTML = ''; // Clear existing rows before adding new ones

      alpacas.forEach((alpaca: { Id: string; Geburtsdatum: string; ImageUrl: string | null; Name: string; }) => {
        const row = document.createElement('tr');
        row.className = 'alpaka-item';
        row.dataset.alpakaId = alpaca.Id;
        row.tabIndex = 0;
        row.setAttribute('role', 'link');
        row.setAttribute('aria-label', `Details für ${alpaca.Name} anzeigen`);
        row.addEventListener('click', () => navigateToAlpaka(alpaca.Id));
        row.addEventListener('keydown', (event) => {
          if (event.key === 'Enter' || event.key === ' ') {
            event.preventDefault();
            navigateToAlpaka(alpaca.Id);
          }
        });

        const age = calculateAge(alpaca.Geburtsdatum);

        // Avatar Cell
        const avatarCell = document.createElement('td');
        if (alpaca.ImageUrl) {
          const img = document.createElement('img');
          img.className = 'dashboard-alpaka-profile-photo'; 
          img.src = alpaca.ImageUrl;
          img.alt = alpaca.Name;
          avatarCell.appendChild(img);
        } else {
          const placeholder = document.createElement('div');
          placeholder.className = 'dashboard-alpaka-profile-placeholder'; // Uses global style
          placeholder.textContent = alpaca.Name.charAt(0).toUpperCase();
          avatarCell.appendChild(placeholder);
        }
        row.appendChild(avatarCell);

        // Name Cell
        const nameCell = document.createElement('td');
        nameCell.className = 'alpaka-name';
        nameCell.textContent = alpaca.Name;
        row.appendChild(nameCell);

        // Age Cell
        const ageCell = document.createElement('td');
        ageCell.className = 'alpaka-age';
        ageCell.textContent = age;
        row.appendChild(ageCell);

        list.appendChild(row);
      });
    } catch (error) {
      console.error('Failed to load alpacas:', error);
    }
  }

  function calculateAge(dateString: string): string {
    const birthDate = new Date(dateString);
    const today = new Date();
    let age = today.getFullYear() - birthDate.getFullYear();
    const m = today.getMonth() - birthDate.getMonth();
    if (m < 0 || (m === 0 && today.getDate() < birthDate.getDate())) {
      age--;
    }
    if (Number.isNaN(age) || age < 0) {
      return 'Unbekannt';
    }
    return `${age} Jahr${age === 1 ? '' : 'e'}`;
  }

  loadAlpakas();

  // Lightbox keyboard accessibility
  document.addEventListener('keydown', (event) => {
    if (event.key === 'Escape' && lightbox && !lightbox.hidden) {
      setLightboxVisibility(false);
    }
  });
</script>

<style>
  .dashboard-alpaka {
    background-color: var(--himmelblau);
    color: var(--schurwolle);
  }

  .alpaka-header {
    display: flex;
    justify-content: space-between;
    align-items: center;
    margin-bottom: 2rem;
  }

  .alpaka-table {
    width: 100%;
    border-collapse: collapse;
    background-color: var(--schurwolle);
    color: var(--taubenblau);
    border-radius: 0.5rem;
    overflow: hidden;
  }

  .alpaka-table th,
  .alpaka-table td {
    padding: 0.75rem 1rem;
    text-align: left;
    border-bottom: 1px solid var(--taubenblau);
  }

  .alpaka-table tr:last-child td {
    border-bottom: none;
  }

  .alpaka-name {
    font-weight: 600;
  }

  .alpaka-age {
    text-align: right;
  }

  .alpaka-loading {
    text-align: center;
  }

  .add-btn {
    background-color: var(--weidegruen);
    color: var(--schurwolle);
    border: none;
    border-radius: 50%;
    width: 2.75rem;
    height: 2.75rem;
    font-size: 1.75rem;
    cursor: pointer;
    transition: transform 0.2s ease;
  }

  .add-btn:hover {
    transform: scale(1.05);
  }

  .lightbox {
    position: fixed;
    inset: 0;
    background-color: rgba(0, 0, 0, 0.6);
    display: none;
    align-items: center;
    justify-content: center;
    padding: 1rem;
  }

  .lightbox.is-visible {
    display: flex;
  }

  .lightbox-content {
    background-color: var(--schurwolle);
    color: var(--taubenblau);
    border-radius: 0.5rem;
    padding: 2rem;
    width: 100%;
    max-width: 28rem;
    position: relative;
  }

  .close-btn {
    position: absolute;
    top: 1rem;
    right: 1rem;
    background: none;
    border: none;
    font-size: 1.5rem;
    color: var(--taubenblau);
    cursor: pointer;
  }

  .alpaka-form {
    display: flex;
    flex-direction: column;
    gap: 1.5rem;
  }

  .form-field {
    display: flex;
    flex-direction: column;
    gap: 0.5rem;
  }

  .form-field label {
    font-weight: 600;
  }

  .form-field input,
  .form-field textarea {
    padding: 0.75rem;
    border-radius: 0.375rem;
    border: 1px solid var(--taubenblau);
    font-family: inherit;
    font-size: 1rem;
  }

  .alpaka-item {
    transition: background-color 0.3s ease;
    cursor: pointer;
  }

  .alpaka-item:hover,
  .alpaka-item:focus-visible {
    background-color: var(--auwasser);
  }

  .alpaka-item:focus-visible {
    outline: 2px solid var(--weidegruen);
    outline-offset: -2px;
  }

  .loading::after {
    content: "";
    display: inline-block;
    width: 1em;
    height: 1em;
    margin-left: 0.5rem;
    border-radius: 50%;
    border: 2px solid currentColor;
    border-right-color: transparent;
    animation: spin 0.75s linear infinite;
  }

  :global(.dashboard-alpaka-profile-photo) {
    width: 48px;
    height: 48px;
    border-radius: 50%;
    object-fit: cover;
  }

  :global(.dashboard-alpaka-profile-placeholder) {
    width: 48px;
    height: 48px;
    border-radius: 50%;
    background: var(--weidegruen);
    color: var(--schurwolle);
    display: flex;
    align-items: center;
    justify-content: center;
    font-weight: 600;
    text-transform: uppercase;
  }

  @keyframes spin {
    to {
      transform: rotate(360deg);
    }
  }

  @media (max-width: 768px) {
    .alpaka-header {
      flex-direction: column;
      align-items: flex-start;
      gap: 1rem;
    }

    .alpaka-table {
      font-size: 0.9rem;
    }

    .alpaka-age {
      text-align: left;
    }

    .lightbox-content {
      padding: 1.5rem;
    }
  }
</style>
