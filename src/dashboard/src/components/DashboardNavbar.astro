---
import { Image } from 'astro:assets';
import Logo from '../images/AS_Symbolik_Backstein.svg';
---

<nav class="navbar">
  <div class="container">
    <a href="/" class="logo" aria-label="Dashboard Startseite">
      <Image style="width:60px;height:60px" src={Logo} alt="Alpakasölde Logo" />
    </a>
    <a href="https://alpakasoelde.at" class="app-link">Zur App</a>
    <ul id="dashboard-navigation" class="nav-links">
      <li><a href="/">Übersicht</a></li>
      <li><a href="/messages">Nachrichten</a></li>
      <li class="user-info">
        <span class="user-name"></span>
        <img class="avatar" alt="" />
      </li>
    </ul>
    <button class="nav-toggle" aria-label="Menü öffnen" aria-controls="dashboard-navigation" aria-expanded="false">☰</button>
  </div>
  <script lang="ts">
    const toggle = document.querySelector<HTMLButtonElement>('.nav-toggle');
    const links = document.querySelector<HTMLUListElement>('.nav-links');

    if (toggle && links) {
      toggle.addEventListener('click', () => {
        const expanded = toggle.getAttribute('aria-expanded') === 'true';
        toggle.setAttribute('aria-expanded', String(!expanded));
        links.classList.toggle('open');
      });
    }

    document.querySelectorAll<HTMLAnchorElement>('.nav-links a').forEach((item) => {
      item.addEventListener('click', () => {
        links?.classList.remove('open');
        toggle?.setAttribute('aria-expanded', 'false');
      });
    });

    type AuthResponse = {
      clientPrincipal?: {
        userDetails?: string | null;
      } | null;
    };

    async function loadUser(): Promise<void> {
      try {
        const res = await fetch('/.auth/me');
        if (!res.ok) return;
        const data = (await res.json()) as AuthResponse;
        const principal = data.clientPrincipal;
        if (!principal) return;

        const name = principal.userDetails ?? 'User';
        const nameElement = document.querySelector<HTMLSpanElement>('.user-name');
        if (nameElement) {
          nameElement.textContent = name;
        }
        const avatar = document.querySelector<HTMLImageElement>('.avatar');
        if (avatar) {
          avatar.src = `https://github.com/${name}.png`;
          avatar.alt = name;
        }
      } catch {
        /* ignore */
      }
    }
    loadUser();
  </script>
</nav>

<style>
  .navbar {
    position: sticky;
    top: 0;
    z-index: 1000;
    background-color: var(--schurwolle);
    padding: 0.5rem 0;
  }
  .navbar .container {
    display: flex;
    align-items: center;
  }
  .nav-links {
    list-style: none;
    display: flex;
    gap: 1rem;
    margin: 0;
    padding: 0;
    margin-left: auto;
    align-items: center;
  }
  .nav-links a {
    text-decoration: none;
    color: var(--taubenblau);
    font-weight: 600;
  }
  .app-link {
    margin-left: 1rem;
    text-decoration: none;
    color: var(--taubenblau);
    font-weight: 600;
  }
  .user-info {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-weight: 600;
  }
  .avatar {
    width: 40px;
    height: 40px;
    border-radius: 50%;
  }
  .nav-toggle {
    display: none;
    background: none;
    border: none;
    color: var(--taubenblau);
    font-size: 1.5rem;
    cursor: pointer;
  }
  @media (max-width: 768px) {
    .nav-links {
      display: none;
      flex-direction: column;
      background-color: var(--schurwolle);
      position: absolute;
      top: 100%;
      left: 0;
      right: 0;
      padding: 1rem;
      margin-left: 0;
    }
    .nav-links.open {
      display: flex;
    }
    .nav-toggle {
      display: block;
      margin-left: auto;
    }
  }
</style>
